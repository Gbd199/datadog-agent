load("@gazelle//:def.bzl", "gazelle")
load("@rules_pkg//pkg:deb.bzl", "pkg_deb")
load("@rules_pkg//pkg:mappings.bzl", "pkg_attributes", "pkg_filegroup", "pkg_files", "strip_prefix")
load("@rules_pkg//pkg:rpm.bzl", "pkg_rpm")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

gazelle(
    name = "gazelle",
    build_tags = [
        "bundle_agent",
        # List of known tags borrowed from /tasks/build_tags.py
        "apm",
        "consul",
        "containerd",
        "cri",
        "datadog.no_waf",
        "docker",
        "ec2",
        "etcd",
        "gce",
        "jetson",
        "jmx",
        "kubeapiserver",
        "kubelet",
        "netcgo",  # Force the use of the CGO resolver. This will also have the effect of making the binary non-static
        "oracle",
        "orchestrator",
        "otlp",
        "podman",
        "process",
        "python",
        # "systemd",
        # "trivy",
        "zk",
        "zlib",
        "zstd",
        "test",  # used for unit-tests
    ],
)

# Packaging
pkg_files(
    name = "binary",
    srcs = ["//cmd/agent"],
    attributes = pkg_attributes(
        group = "root",
        mode = "755",
        user = "root",
    ),
    prefix = "opt/datadog-agent/bin/agent",
)

pkg_files(
    name = "postinst",
    srcs = [
        "omnibus/package-scripts/agent-deb/postinst",
    ],
)

pkg_files(
    name = "postrm",
    srcs = [
        "omnibus/package-scripts/agent-deb/postrm",
    ],
)

pkg_files(
    name = "preinst",
    srcs = [
        "omnibus/package-scripts/agent-deb/preinst",
    ],
)

pkg_files(
    name = "prerm",
    srcs = [
        "omnibus/package-scripts/agent-deb/prerm",
    ],
)

pkg_files(
    name = "agent_dist",
    srcs = ["//cmd/agent:dist_files"],
    attributes = pkg_attributes(
        group = "root",
        user = "root",
    ),
    prefix = "opt/datadog-agent/bin/agent",
    strip_prefix = strip_prefix.from_pkg(),
)

pkg_filegroup(
    name = "agent_files",
    srcs = [
        ":agent_dist",
        ":binary",
    ],
)

pkg_tar(
    name = "agent_tar",
    srcs = [":agent_files"],
    package_dir = "./",
    stamp = 1,
)

pkg_deb(
    name = "agent_deb",
    architecture = "amd64",
    conflicts = ["datadog-iot-agent"],
    data = ":agent_tar",
    description = """Datadog Monitoring Agent
  The Datadog Monitoring Agent is a lightweight process that monitors system
  processes and services, and sends information back to your Datadog account.
  .
  This package installs and runs the advanced Agent daemon, which queues and
  forwards metrics from your applications as well as system services.
  .
  See http://www.datadoghq.com/ for more information""",
    homepage = "http://www.datadoghq.com/",
    license = "Apache License Version 2.0",
    maintainer = "Datadog Packages <package@datadoghq.com>",
    package = "datadog-agent",
    postinst = ":postinst",
    postrm = ":postrm",
    preinst = ":preinst",
    prerm = ":prerm",
    priority = "extra",
    recommends = ["datadog-signing-keys (>= 1:1.3.1)"],
    section = "utils",
    version = "1:7.55.0-1",
)

pkg_files(
    name = "rpm_files",
    srcs = [":agent"],
)

pkg_rpm(
    name = "agent_rpm",
    srcs = [":rpm_files"],
    description = """Datadog Monitoring Agent
The Datadog Monitoring Agent is a lightweight process that monitors system
processes and services, and sends information back to your Datadog account.
.
This package installs and runs the advanced Agent daemon, which queues and
forwards metrics from your applications as well as system services.
.
See http://www.datadoghq.com/ for more information""",
    license = "Apache License Version 2.0",
    release = "1",
    summary = "Datadog Monitoring Agent",
    version = "7.55.0",
)
