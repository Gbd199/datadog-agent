stages:
  - lint
  - test
  # - build

.job_isolation:
# Install dependencies
  before_script:
    # - brew uninstall golangci-lint
    - python3 -m pip install -r requirements.txt
    - python3 -m pip install -r tasks/libs/requirements-github.txt
    - inv -e install-tools
    - inv -e deps
    - inv -e agent.version --version-cached
  # artifacts:
  #   paths:
  #     - agent-version.cache
  # Remove cache and uninstall dependencies
  after_script:
    - golangci-lint cache clean
    - go clean -cache
    - go clean -modcache
    - python3 -m pip uninstall -y -r requirements.txt

# FIXME: Uncomment it when done with the preview
# install_ibm_mq:
#   tags: ["mac-ventura-preview"]
#   stage: setup
#   script:
#     - IBM_MQ_VERSION="9.2.4.0-IBM-MQ-DevToolkit"
#     # Install IBM MQ
#     - sudo mkdir -p /opt/mqm
#     - curl --retry 5 --fail "https://s3.amazonaws.com/dd-agent-omnibus/ibm-mq-backup/${IBM_MQ_VERSION}-MacX64.pkg" -o /tmp/mq_client.pkg
#     - sudo installer -pkg /tmp/mq_client.pkg -target /
#     - sudo rm -rf /tmp/mq_client.pkg

check_versions:
  tags: ["mac-ventura-preview"]
  stage: lint
  needs: []
  script:
    # Check https://github.com/DataDog/datadog-agent-macos-build/blob/master/scripts/builder_setup.sh for differences
    # The runners deps are installed here: https://github.com/DataDog/ci-platform-machine-images/blob/bad51a01794d30db8dc18ad6e9dd7bd6462bab9b/packer/macos/preview/ventura/build.pkr.hcl
    - |
      echo "PKG_CONFIG_VERSION $(pkg-config --version)
      RUBY_VERSION $(ruby --version)
      GO_VERSION $(go version)
      GOLANGCI_LINT_VERSION $(golangci-lint --version)
      BUNDLER_VERSION $(bundler --version)
      PYTHON_VERSION $(python3 --version)
      RUST_VERSION $(rustc --version)
      RUSTUP_VERSION $(rustup --version)
      CMAKE_VERSION $(cmake --version)"


run_go_linters:
  extends: .job_isolation
  tags: ["mac-ventura-preview"]
  stage: lint
  needs: []
  script:
    - inv -e lint-go

.run_go_tests:
  extends: .job_isolation
  tags: ["mac-ventura-preview"]
  script:
    - inv -e rtloader.make --python-runtimes 3
    - inv -e rtloader.install
    - inv -e test --rerun-fails=2 --python-runtimes 3 --race --profile --cpus 3 --save-result-json "test_output.json" --junit-tar "junit-tests_macos.tgz"
    - inv -e invoke-unit-tests

run_go_tests_1:
  stage: test
  extends: .run_go_tests
run_go_tests_2:
  stage: test
  extends: .run_go_tests
run_go_tests_3:
  stage: test
  extends: .run_go_tests
run_go_tests_4:
  stage: test
  extends: .run_go_tests
run_go_tests_5:
  stage: test
  extends: .run_go_tests
run_go_tests_6:
  stage: test
  extends: .run_go_tests
run_go_tests_7:
  stage: test
  extends: .run_go_tests
run_go_tests_8:
  stage: test
  extends: .run_go_tests
run_go_tests_9:
  stage: test
  extends: .run_go_tests
run_go_tests_10:
  stage: test
  extends: .run_go_tests
run_go_tests_11:
  stage: test
  extends: .run_go_tests
run_go_tests_12:
  stage: test
  extends: .run_go_tests
run_go_tests_13:
  stage: test
  extends: .run_go_tests
run_go_tests_14:
  stage: test
  extends: .run_go_tests
run_go_tests_15:
  stage: test
  extends: .run_go_tests
