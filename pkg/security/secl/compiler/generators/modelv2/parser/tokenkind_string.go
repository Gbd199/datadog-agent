// Code generated by "stringer -type=TokenKind"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Undefined-0]
	_ = x[EOF-1]
	_ = x[Arrow-2]
	_ = x[DoubleArrow-3]
	_ = x[LeftParenthesis-4]
	_ = x[RightParenthesis-5]
	_ = x[LeftSquareBracket-6]
	_ = x[RightSquareBracket-7]
	_ = x[LeftCurlyBracket-8]
	_ = x[RightCurlyBracket-9]
	_ = x[CommercialAt-10]
	_ = x[Star-11]
	_ = x[Dot-12]
	_ = x[Comma-13]
	_ = x[Colon-14]
	_ = x[NumberLiteral-15]
	_ = x[StringLiteral-16]
	_ = x[Identifier-17]
	_ = x[TypeKeyword-18]
	_ = x[StructKeyword-19]
	_ = x[TrueKeyword-20]
	_ = x[FalseKeyword-21]
	_ = x[EmbedKeyword-22]
	_ = x[DocComment-23]
}

const _TokenKind_name = "UndefinedEOFArrowDoubleArrowLeftParenthesisRightParenthesisLeftSquareBracketRightSquareBracketLeftCurlyBracketRightCurlyBracketCommercialAtStarDotCommaColonNumberLiteralStringLiteralIdentifierTypeKeywordStructKeywordTrueKeywordFalseKeywordEmbedKeywordDocComment"

var _TokenKind_index = [...]uint16{0, 9, 12, 17, 28, 43, 59, 76, 94, 110, 127, 139, 143, 146, 151, 156, 169, 182, 192, 203, 216, 227, 239, 251, 261}

func (i TokenKind) String() string {
	if i < 0 || i >= TokenKind(len(_TokenKind_index)-1) {
		return "TokenKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenKind_name[_TokenKind_index[i]:_TokenKind_index[i+1]]
}
