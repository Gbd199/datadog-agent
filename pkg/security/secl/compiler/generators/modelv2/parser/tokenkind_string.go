// Code generated by "stringer -type=TokenKind"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Undefined-0]
	_ = x[EOF-1]
	_ = x[Arrow-2]
	_ = x[LeftParenthesis-3]
	_ = x[RightParenthesis-4]
	_ = x[LeftSquareBracket-5]
	_ = x[RightSquareBracket-6]
	_ = x[LeftCurlyBracket-7]
	_ = x[RightCurlyBracket-8]
	_ = x[CommercialAt-9]
	_ = x[Dot-10]
	_ = x[Comma-11]
	_ = x[Colon-12]
	_ = x[NumberLiteral-13]
	_ = x[StringLiteral-14]
	_ = x[Identifier-15]
	_ = x[TypeKeyword-16]
	_ = x[StructKeyword-17]
	_ = x[TrueKeyword-18]
	_ = x[FalseKeyword-19]
	_ = x[EmbedKeyword-20]
	_ = x[DocComment-21]
}

const _TokenKind_name = "UndefinedEOFArrowLeftParenthesisRightParenthesisLeftSquareBracketRightSquareBracketLeftCurlyBracketRightCurlyBracketCommercialAtDotCommaColonNumberLiteralStringLiteralIdentifierTypeKeywordStructKeywordTrueKeywordFalseKeywordEmbedKeywordDocComment"

var _TokenKind_index = [...]uint8{0, 9, 12, 17, 32, 48, 65, 83, 99, 116, 128, 131, 136, 141, 154, 167, 177, 188, 201, 212, 224, 236, 246}

func (i TokenKind) String() string {
	if i < 0 || i >= TokenKind(len(_TokenKind_index)-1) {
		return "TokenKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenKind_name[_TokenKind_index[i]:_TokenKind_index[i+1]]
}
